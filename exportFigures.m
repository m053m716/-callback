function exportFigures(src, evt)
%EXPORTFIGURES  Handles figure export based on delimited string message.
%
% Syntax:
%   callback.exportFigures(src, evt);
%
% Example:
%   server = tcpserver(...);
%   configureTerminator(server, "LF");
%   configureCallback(server, 'terminator', @callback.echo);
%
% Inputs:
%   src - Handle for which this callback was configured (typically,
%           tcpserver)
%   evt - Eventdata sent when the callback was triggered.
%
% See also: Contents, tcpserver, tcpclient

msg = readline(src);
fprintf(1, ">> %s::Server-%s::%s\n", evt.AbsoluteTime, src.UserData.tag, msg);

args = strsplit(msg, src.UserData.delimiter);
plot.emg_averages(...
    args{1}, ... %SUBJ
    str2double(args{2}), ... % YYYY 
    str2double(args{3}), ... % MM
    str2double(args{4}), ... % DD
    src.UserData.tag,    ... % ARRAY
    str2double(args{5}), ... % BLOCK
    'File_Type', src.UserData.type, ...
    'Sync_Bit', src.UserData.sync_bit, ... % only has to be done the first time.
    'Plot_Stim_Period', true, ...
    'EMG_Type', 'Array', ...
    'Filtering', src.UserData.filter.raw_array, ...
    'T', [-10 70], ...
    'XLim', [-5, 60]);
plot.emg_averages(...
    args{1}, ... %SUBJ
    str2double(args{2}), ... % YYYY 
    str2double(args{3}), ... % MM
    str2double(args{4}), ... % DD
    src.UserData.tag,    ... % ARRAY
    str2double(args{5}), ... % BLOCK
    'File_Type', src.UserData.type, ...
    'Plot_Stim_Period', false, ...
    'EMG_Type', 'Array', ...
    'Filtering', src.UserData.filter.diff2_array, ...
    'T', [-10 40], ...
    'XLim', [0, 30]);
plot.emg_averages(...
    args{1}, ... %SUBJ
    str2double(args{2}), ... % YYYY 
    str2double(args{3}), ... % MM
    str2double(args{4}), ... % DD
    src.UserData.tag,    ... % ARRAY
    str2double(args{5}), ... % BLOCK
    'File_Type', src.UserData.type, ...
    'Plot_Stim_Period', false, ...
    'EMG_Type', 'Bipolar', ...
    'Filtering', src.UserData.filter.bipolar, ...
    'N_Rows', 4, ...
    'N_Columns', 1, ...
    'T', [-10 30], ...
    'XLim', [0, 20]);
plot.emg_rms(...
    args{1}, ... %SUBJ
    str2double(args{2}), ... % YYYY 
    str2double(args{3}), ... % MM
    str2double(args{4}), ... % DD
    src.UserData.tag,    ... % ARRAY
    str2double(args{5}), ... % BLOCK
    'File_Type', src.UserData.type, ...
    'RMS_Max_Response_Ratio', 3, ...
    'RMS_Response_Ratio_Threshold', 2.5, ...
    'T', [-15, 25], ...
    'Pre_Stimulus_RMS_ms', -2, ... % Pre-window: -15 to -2 ms
    'Post_Stimulus_RMS_ms', 12, ... % Post-window: 12 to 25 ms
    'Filtering', src.UserData.filter.rms, ...
    'Debug', false);

end